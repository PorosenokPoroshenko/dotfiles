# show sxhkd keybindings
# super + F1
#   useus $SCRIPT_DIR/rofi/sxhkd

TERM="termite"


 #close/kill window
super +c
    bspc node -c

# start a terminal
super + Return
    termite 

# copy german characters to a clipboard
super + u
    echo ü|xclip -sel c

super + s
    echo ß|xclip

super + a
    echo ä|xclip

super + o
    echo ö|xclip

# start urxvt terminal
ctrl + alt + t 
    urxvt
# switch layout
alt + shift
    xkb-switch -n

# change background
super + n
  nitrogen --random --set-zoom-fill $WALLPAPERS_DIR

# run rofi
super + space
    rofi show-icons -modi run,drun -show drun

# unicode symbols picker
super + alt + apostrophe
  unipicker --command "rofi -dmenu -p 'unicode'" --copy-command "xclip -sel clip"

# emoji picker (shift to copy mode)
super + {_,shift} + apostrophe
  splatmoji {type,copy}

# password manager
super + p
  rofi-pass

# brightness control
XF86MonBrightness{Up,Down}
  xbacklight {+,-} 10

# volume control
XF86Audio{Raise,Lower}Volume
  pulsemixer --change-volume {+,-}5

# volume toggle mute
XF86AudioMute
  pulsemixer --toggle-mute

# player control
XF86Audio{Next,Prev,Play}
  playerctl -p playerctld {next,previous,play-pause}

# stop all players
XF86AudioStop
  playerctl --all-players stop

# flameshot
Print
  flameshot gui

control + Print
  flameshot full -c

#start ranger
super + e
   EDITOR=nvim $TERM -e ranger

# start dolphin
# super + alt + e
#   dolphin

# start discord
super + alt + d
  discord

# system control
# super + shift + Escape
#   useus $SCRIPT_DIR/rofi/system

# reload sxhkd
mod4 + shift + c
  pkill -usr1 -x sxhkd; notify-send 'sxhkd' 'Config reloaded'

# switch polybar (shift to hide)
# super + {_,shift + }v
#   $SCRIPT_DIR/bspwm/polyshow {show,hide}

### --- bspwm keybindings --- ###

# logout
super + F4
  pkill -KILL -u $USER

# restart bspwm
super + shift + r
  bspc wm -r

# change gaps
super + ctrl + {minus,equal}
   bspc config window_gap $((`bspc config window_gap` {-,+} 2))

# gaps to default
super + ctrl + 0
   bspc config window_gap 0

# toggle monocle layout
super + m
  bspc desktop -l next

# manage layouts
# super + semicolon
#   useus $SCRIPT_DIR/rofi/bspl

# send the newest marked node to the newest preselected node
super + o
	bspc node focused -n newest.!automatic.local

# swap the current node and the biggest window
super + x
	bspc node -s biggest.window.local

# set the window state
super + {t,p + t,f}
	bspc node -t {tiled,pseudo_tiled,floating}

# toggle fullscreen
# super + f
#   $SCRIPT_DIR/bspwm/fullscreen

# set the node flags
super + ctrl + {m,x,y,z}
	bspc node -g {marked,locked,sticky,private}

# focus/swap next/prev node
super + {_,shift + }{j,k}
	bspc node -{f,s} {next,prev}.local.!hidden.window

# focus the next/previous desktop in the current monitor
super + {comma,period}
	bspc desktop -f {prev,next}.local

# move to next/previous desktop with current node
super + shift + {comma,period}
	id=$(bspc query -N -n); bspc node -d {prev,next}.local; bspc node -f ${id}

# focus the next/previous occupied desktop in the current monitor
super + {h,l}
	bspc desktop -f {prev,next}.local.occupied

# move to next/previous occupied desktop with current node
super + shift + {h,l}
	id=$(bspc query -N -n); bspc node -d {prev,next}.local.occupied; bspc node -f ${id}

# focus or send to the given desktop
super + {_,shift + }{1-9,0}
	bspc {desktop -f,node -d} '^{1-9,10}'

super + minus
  bspc desktop -f last

super + grave
  bspc desktop -f next.urgent

# preselect the direction
super + ctrl + {h,j,k,l}
	bspc node -p {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
	bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + space
  bspc node -p cancel

# cancel the preselection for the focused desktp
super + ctrl + shift + space
	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

# resize node
super + alt + {h,j,k,l}
  STEP=20; SELECTION={1,2,3,4}; \
  bspc node -z $(echo "left -$STEP 0,bottom 0 $STEP,top 0 -$STEP,right $STEP 0" | cut -d',' -f$SELECTION) || \
  bspc node -z $(echo "right -$STEP 0,top 0 $STEP,bottom 0 -$STEP,left $STEP 0" | cut -d',' -f$SELECTION)

# contract a window by moving one of its side inward
super + alt + shift + {h,j,k,l}
	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# move a floating window
super + {Left,Down,Up,Right}
	bspc node -v {-20 0,0 20,0 -20,20 0}



